//https://qiita.com/chieeeeno/items/1dda5c47d4f1e36408e8
// https://www.sitepoint.com/building-3d-rotating-carousel-css-javascript/
body {
  margin: 0;
  font-family: 'Roboto';
  font-size: 16px;

  display: flex; // To center the carousel vertically in the viewport
  flex-direction: column;
  height: 100vh;
  justify-content: center;
}

// Carousel configuration parameters
$n: 8; // Number of images
$item-width: 400px; // Width of an image. In the Js version this value can be a percentage
$item-separation: 80px; // The space between the images. This will decrease the effective item width
// More precisely, taking half of this value for the left and right padding:
$viewer-distance: 500px;

// Derived variables
$theta: 2 * 3.141592653589793 / $n;
$apothem: 482.842712474619px; // == $item-width / (2 * tan(PI / $n)) <-- this is wrong ! Fuck 문과
// this formula is not implemented as written because the tangent function is not readily available in Sass,
.markdown {
  padding: 20px;

  perspective: $viewer-distance;
  overflow: hidden;

  display: flex;
  flex-direction: column;
  align-items: center;
}

.carousel {
  padding: 20px;

  perspective: $viewer-distance;
  overflow: hidden;

  display: flex;
  flex-direction: column;
  align-items: center;
  > * {
    flex: 0 0 auto;
  }

  figure {
    margin: 0;

    width: $item-width;
    transform-style: preserve-3d;
    transition: transform 0.5s;
    transform-origin: 50% 50% (-$apothem);
    // About transform
    // https://www.w3schools.com/cssref/trycss3_transform-origin_inuse.htm
    // http://unformedbuilding.com/articles/learn-about-css-transforms/
    img {
      width: 100%;
      box-sizing: border-box;
      padding: 0 $item-separation / 2;

      opacity: 0.9; // Just to better illustrate the placement of the carousel sides

      &:not(:first-of-type) {
        position: absolute;
        left: 0;
        top: 0;
        transform-origin: 50% 50% (-$apothem);
      }

      @for $i from 2 through $n {
        &:nth-child(#{$i}) {
          transform: rotateY(#{($i - 1) * $theta}rad);
        }
      }
    }
  }

  nav {
    display: flex;
    justify-content: center;
    margin: 20px 0 0;

    button {
      flex: 0 0 auto;
      margin: 0 5px;

      cursor: pointer;

      color: #333;
      background: none;
      border: 1px solid;
      letter-spacing: 1px;
      padding: 5px 10px;
    }
  }
}
